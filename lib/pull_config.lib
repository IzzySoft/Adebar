##############################################################################
# Adebar Â© 2014-2021 by Itzchak Rehberg
# This is part of the Adebar project, see https://codeberg.org/izzy/Adebar
# Protected by the GPLv2
# ----------------------------------------------------------------------------
# library to pull config files
##############################################################################


#
# Get config files
# includes WiFi APs etc.
#
getSettings() {
  [ $PULL_SETTINGS -ne 1 ] && return
  doProgress "Pulling configuration files"

  local msg
  # build.prop
  if [[ ${ROOT_COMPAT} -eq 1 ]]; then   # Android 8+ require root
    msg="$((adb ${ADBOPTS} shell "su -c 'cat /system/build.prop'" > "${BUILDPROP}") 2>&1)"
  else
    msg="$((adb ${ADBOPTS} pull /system/build.prop "${BUILDPROP}") 2>&1)"
  fi
  [[ $? -ne 0 ]] && msg=$(ansi_code "${msg}" "red")
  [[ -z "$msg" ]] && msg="OK"
  doProgress "- build.prop: $(trim "${msg##*]}")" 2

  # wpa_supplicant.conf
  local wificonf="/data/misc/wifi/wpa_supplicant.conf"
  if [[ ${ROOT_COMPAT} -eq 1 ]]; then
    adb ${ADBOPTS} shell "su -c 'ls /data/misc/wifi/wpa_supplicant.conf' >/dev/null 2>&1"
    [[ $? -ne 0 ]] && wificonf="/data/misc/wifi/WifiConfigStore.xml"
    msg="$((adb ${ADBOPTS} shell "su -c 'cat $wificonf'" > "${CONFDIR}/$(basename $wificonf)") 2>&1)"
  else
    adb ${ADBOPTS} shell "ls /data/misc/wifi/wpa_supplicant.conf >/dev/null 2>&1"
    [[ $? -ne 0 ]] && wificonf="/data/misc/wifi/WifiConfigStore.xml"
    msg="$((adb ${ADBOPTS} pull $wificonf "${CONFDIR}/$(basename $wificonf)") 2>&1)"
  fi
  [[ $? -ne 0 ]] && msg=$(ansi_code "${msg}" "red")
  [[ -z "$msg" ]] && msg="OK"
  doProgress "- $(basename ${wificonf}): $msg" 2

  # softap.conf
  if [[ ${ROOT_COMPAT} -eq 1 ]]; then
    msg="$((adb ${ADBOPTS} shell "su -c 'cat /data/misc/wifi/softap.conf'" > "${CONFDIR}/softap.conf") 2>&1)"
  else
    msg="$((adb ${ADBOPTS} pull /data/misc/wifi/softap.conf "${CONFDIR}/softap.conf") 2>&1)"
  fi
  [[ $? -ne 0 ]] && msg=$(ansi_code "${msg}" "red")
  [[ -z "$msg" ]] && msg="OK"
  doProgress "- softap.conf: $msg" 2

  # gps.conf, hosts
  msg="$((adb ${ADBOPTS} pull /system/etc/gps.conf "${CONFDIR}/gps.conf") 2>&1)"
  doProgress "- gps.conf: $(trim "${msg##*]}")" 2
  msg="$((adb ${ADBOPTS} pull /system/etc/hosts "${CONFDIR}/hosts") 2>&1)"
  doProgress "- hosts: $(trim "${msg##*]}")" 2

  # packages.xml
  if [[ ${ROOT_COMPAT} -eq 1 ]]; then
    local msg="$((adb ${ADBOPTS} shell "su -c 'cat /data/system/packages.xml'" > "${PKGXML}") 2>&1)"
  else
    local msg="$((adb ${ADBOPTS} pull /data/system/packages.xml "${PKGXML}") 2>&1)"
  fi
  # "adb pull" seems to "exit 0" also on "Permission denied" (but not on "does not exist")
  [[ "$msg" =~ "Permission denied" ]] && msg=$(ansi_code "$msg" "red")
  [[ -z "$msg" ]] && msg="OK"
  doProgress "- packages.xml: $msg" 2

  # app usage history (JB + KK)
  if [[ $DEVICE_SDKVER -lt 21 ]]; then
    if [[ ${ROOT_COMPAT} -eq 1 ]]; then
      local msg="$((adb ${ADBOPTS} shell "su -c 'cat /data/system/usagestats/usage-history.xml'" > "${CONFDIR}/usage-history.xml") 2>&1)"
    else
      local msg="$((adb ${ADBOPTS} pull /data/system/usagestats/usage-history.xml "${CONFDIR}/usage-history.xml") 2>&1)"
    fi
    # "adb pull" seems to "exit 0" also on "Permission denied" (but not on "does not exist")
    [[ "$msg" =~ "Permission denied" ]] && msg=$(ansi_code "$msg" "red")
    [[ -z "$msg" ]] && msg="OK"
    doProgress "- usage-history.xml: $msg" 2
  fi

  # SMS/MMS ?
  # CallLog ?
  # ?
}

#
# Get XPrivacy data
#
getXPrivacy() {
  [[ $MK_XPRIVACY_EXPORT -lt 1 && $MK_XPRIVACY_PULL -lt 1 ]] && return
  doProgress "Looking for XPrivacy data"

  [[ $MK_XPRIVACY_EXPORT -gt 0 ]] && {
    doProgress "- triggering XPrivacy export" 2
    local filename="/sdcard/xprivacy_$(date +"%Y%m%d_%H%M%S").xml"
    local msg="$((adb ${ADBOPTS} shell "am start -a biz.bokhorst.xprivacy.action.EXPORT -e FileName ${filename}") 2>&1)"
    local -i sleepcount=0
    local -i oldsize=0
    local -i newsize=0
    local newsizestr nobreak=0
    doProgress "- waiting for XPrivacy export to complete" 2
    while [[ $sleepcount -lt 10 ]] # 20s should be sufficient, else something went wrong
    do
      sleep 2 # give it some time to complete
      if [[ -n "$(adb ${ADBOPTS} shell ls ${filename%/*}/ | grep ${filename##*/})" ]]; then
        newsizestr=$(adb ${ADBOPTS} shell "ls -l ${filename} |awk '{print \$4}'")
        newsize=(${newsizestr//[$'\r']})
        if [[ $newsize -eq 0 ]]; then
          sleepcount+=1
          doProgress "  + export started, file still empty\r" 3 n
          nobreak=1
        elif [[ $newsize -eq $oldsize ]]; then  # not growing anymore
          doProgress "  + export seems complete, final size: ${newsize} bytes" 3
          nobreak=0
          break
        else
          oldsize=$newsize
          doProgress "  + export running, current size: ${newsize} bytes\r" 3 n
          nobreak=1
        fi
      else
        sleepcount+=1
        doProgress "  + Loop ${sleepcount}, file not yet there\r" 3 n
        nobreak=1
      fi
    done
    [[ $nobreak -ne 0 ]] && doProgress "" 3
    if [[ -n "$(adb ${ADBOPTS} shell ls ${filename%/*}/ | grep ${filename##*/})" ]]; then
      sleep 2 # just another safeguard to ensure export is complete
      local msg="$((adb ${ADBOPTS} pull ${filename} "${CONFDIR}/xprivacy.xml") 2>&1)"
      adb ${ADBOPTS} shell rm ${filename}
      [[ -f "${CONFDIR}/xprivacy.xml" ]] && gzip -9 "${CONFDIR}/xprivacy.xml"
    else
      echo -e "$(ansi_code "failed to pull export from XPrivacy. Are you sure you're running its PRO version?" "red")"
    fi
  }

  [[ $MK_XPRIVACY_PULL -gt 0 ]] && {
    [[ -n "$(adb ${ADBOPTS} shell 'su -c "ls /data/system/xprivacy 2>/dev/null"')" ]] && {
      doProgress "- pulling XPrivacy databases" 2
      mkdir "${CONFDIR}/xprivacy_dbs"
      if [[ ${ROOT_COMPAT} -eq 1 ]]; then
        local tmpdir="/sdcard/xprivacy_$(date +"%Y%m%d_%H%M%S")"
        local msg="$((adb ${ADBOPTS} shell "su -c \"cp -a /data/system/xprivacy $tmpdir\"") 2>&1)"
        if [[ "$msg" =~ "Permission denied" ]]; then
          echo -e "$(ansi_code "$msg" "red")"
        else # empty = OK (so maybe we need another check here)
          msg="$((adb ${ADBOPTS} pull $tmpdir "${CONFDIR}/xprivacy_dbs") 2>&1)" # if OK, starts with "pull: building file list..."
        fi
        local msg2="$((adb ${ADBOPTS} shell rm -rf $tmpdir) 2>&1)" # empty $msg2 should mean success
      else
        local msg="$((adb ${ADBOPTS} pull /data/system/xprivacy "${CONFDIR}/xprivacy_dbs") 2>&1)"
      fi
      cd "${CONFDIR}"
      tar czf "xprivacy_dbs.tar.gz" "xprivacy_dbs" && rm -rf "xprivacy_dbs"
      cd - >/dev/null 2>&1
    }
  }
}
